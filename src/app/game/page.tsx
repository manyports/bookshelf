"use client";

import { Button } from "@/components/ui/button";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { useEffect, useState } from "react";

const books = [
  "–í–æ–π–Ω–∞ –∏ –º–∏—Ä - –õ–µ–≤ –¢–æ–ª—Å—Ç–æ–π",
  "–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ - –§—ë–¥–æ—Ä –î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π",
  "–ê–±–∞–π –ñ–æ–ª—ã –Ü - –ú—É—Ö—Ç–∞—Ä –ê—É–µ–∑–æ–≤",
  "–í–µ—Å—ë–ª–∞—è –Ω–∞—É–∫–∞ - –§. –ù–∏—Ü—Ü–µ",
  "–ï—Ä—Ç–µ–≥—ñ–ª–µ—Ä –∂–∏–Ω–∞“ì—ã - –ñ–æ—Ä–∞–±–µ–∫ –ê–ª–∏–º–∂–∞–Ω",
  "“ö–∞“ª–∞—Ä —Ä–æ–º–∞–Ω—ã - –Ü–ª–∏—è—Å –ï—Å–µ–Ω–±–µ—Ä–ª–∏–Ω",
  "“ö–∞–∑–¥–∞—Ä “õ–∞–π—Ç—ã–ø –±–∞—Ä–∞–¥—ã - “ö–∞–±–¥–µ—à –ñ“±–º–∞–¥—ñ–ª–æ–≤",
  "–•–∞–Ω –∫–µ–Ω–µ - –Ü–ª–∏—è—Å –ï—Å–µ–Ω–±–µ—Ä–ª–∏–Ω",
  "“ö—ã–∑ –ñ—ñ–±–µ–∫ - “í–∞–±–∏—Ç –ú“Ø—Å—ñ—Ä–µ–ø–æ–≤",
];

type ReadingSession = {
  book: string;
  startTime: Date;
  endTime: Date;
  duration: number;
  tomatoes: number;
};

export default function ReadingTimer() {
  const [isReading, setIsReading] = useState(false);
  const [seconds, setSeconds] = useState(0);
  const [selectedBook, setSelectedBook] = useState("");
  const [sessions, setSessions] = useState<ReadingSession[]>([]);
  const [startTime, setStartTime] = useState<Date | null>(null);
  const [totalTomatoes, setTotalTomatoes] = useState(0);

  useEffect(() => {
    let interval: NodeJS.Timeout | null = null;
    if (isReading) {
      interval = setInterval(() => {
        setSeconds((seconds) => seconds + 1);
      }, 1000);
    } else if (interval) {
      clearInterval(interval);
    }
    return () => {
      if (interval) clearInterval(interval);
    };
  }, [isReading]);

  const formatTime = (totalSeconds: number) => {
    const hours = Math.floor(totalSeconds / 3600);
    const minutes = Math.floor((totalSeconds % 3600) / 60);
    const seconds = totalSeconds % 60;
    return `${hours.toString().padStart(2, "0")}:${minutes
      .toString()
      .padStart(2, "0")}:${seconds.toString().padStart(2, "0")}`;
  };

  const handleStartStop = () => {
    if (!isReading) {
      if (selectedBook) {
        setStartTime(new Date());
        setIsReading(true);
      } else {
        alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–∏–≥—É –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —á—Ç–µ–Ω–∏—è.");
      }
    } else {
      setIsReading(false);
      const endTime = new Date();
      const duration = Math.floor(
        (endTime.getTime() - (startTime?.getTime() || 0)) / 1000
      );
      const tomatoes = Math.floor(duration / 600);
      setSessions([
        ...sessions,
        {
          book: selectedBook,
          startTime: startTime!,
          endTime,
          duration,
          tomatoes,
        },
      ]);
      setTotalTomatoes((prevTotal) => prevTotal + tomatoes);
      setSeconds(0);
      setSelectedBook("");
    }
  };

  return (
    <div className="container mx-auto p-4 max-w-md min-h-screen">
      <h1 className="text-3xl font-bold mb-6 text-center">–°—á–µ—Ç—á–∏–∫ —á—Ç–µ–Ω–∏—è</h1>

      <div className="mb-6">
        <Select onValueChange={setSelectedBook} value={selectedBook}>
          <SelectTrigger>
            <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–∏–≥—É" />
          </SelectTrigger>
          <SelectContent>
            {books.map((book) => (
              <SelectItem key={book} value={book}>
                {book}
              </SelectItem>
            ))}
          </SelectContent>
        </Select>
      </div>

      <div className="text-center mb-6">
        <div className="text-6xl font-bold mb-4">{formatTime(seconds)}</div>
        <Button onClick={handleStartStop} className="w-full">
          {isReading ? "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å" : "–ù–∞—á–∞—Ç—å —á—Ç–µ–Ω–∏–µ"}
        </Button>
      </div>

      <div className="text-center mb-6">
        <div className="text-2xl font-semibold">
          –í—Å–µ–≥–æ –ø–æ–º–∏–¥–æ—Ä–æ–≤: {totalTomatoes} üçÖ
        </div>
      </div>

      <div className="text-sm text-center mb-6">
        –ü–æ–º–∏–¥–æ—Ä—ã üçÖ –∑–∞—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ. 10 –º–∏–Ω—É—Ç = 1
        üçÖ
      </div>

      <div className="space-y-4">
        <h2 className="text-xl font-semibold">–ò—Å—Ç–æ—Ä–∏—è —á—Ç–µ–Ω–∏—è</h2>
        {sessions.map((session, index) => (
          <div key={index} className="border p-3 rounded">
            <div className="font-medium">{session.book}</div>
            <div>–ù–∞—á–∞–ª–æ: {session.startTime.toLocaleTimeString()}</div>
            <div>–ö–æ–Ω–µ—Ü: {session.endTime.toLocaleTimeString()}</div>
            <div>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {formatTime(session.duration)}</div>
            <div>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –ø–æ–º–∏–¥–æ—Ä–æ–≤: {session.tomatoes} üçÖ</div>
          </div>
        ))}
      </div>
    </div>
  );
}
